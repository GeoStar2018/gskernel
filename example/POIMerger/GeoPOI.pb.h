// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GeoPOI.proto

#ifndef PROTOBUF_GeoPOI_2eproto__INCLUDED
#define PROTOBUF_GeoPOI_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace GEOPOI {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_GeoPOI_2eproto();
void protobuf_AssignDesc_GeoPOI_2eproto();
void protobuf_ShutdownFile_GeoPOI_2eproto();

class PBPOI;
class StringTable;
class PBPOITile;

enum enumGeometryType {
  ePoint = 0,
  eMultiLineString = 1,
  ePolygon = 2
};
bool enumGeometryType_IsValid(int value);
const enumGeometryType enumGeometryType_MIN = ePoint;
const enumGeometryType enumGeometryType_MAX = ePolygon;
const int enumGeometryType_ARRAYSIZE = enumGeometryType_MAX + 1;

enum enumZCoordType {
	eCloseGround = 0,
	eCloseSeaSurface = 1,
	eRelativelyGround = 2,
	eAbsolute = 3
} ;
bool enumZCoordType_IsValid(int value);
const enumZCoordType enumZCoordType_MIN = eCloseGround;
const enumZCoordType enumZCoordType_MAX = eAbsolute;
const int enumZCoordType_ARRAYSIZE = enumZCoordType_MAX + 1;
// ===================================================================

class PBPOI : public ::google::protobuf::MessageLite {
 public:
  PBPOI();
  virtual ~PBPOI();

  PBPOI(const PBPOI& from);

  inline PBPOI& operator=(const PBPOI& from) {
    CopyFrom(from);
    return *this;
  }

  static const PBPOI& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PBPOI* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PBPOI* other);

  // implements Message ----------------------------------------------

  PBPOI* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PBPOI& from);
  void MergeFrom(const PBPOI& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 OID = 1;
  inline bool has_oid() const;
  inline void clear_oid();
  static const int kOIDFieldNumber = 1;
  inline ::google::protobuf::uint64 oid() const;
  inline void set_oid(::google::protobuf::uint64 value);

  // required string Name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // repeated double Coordinates = 3 [packed = true];
  inline int coordinates_size() const;
  inline void clear_coordinates();
  static const int kCoordinatesFieldNumber = 3;
  inline double coordinates(int index) const;
  inline void set_coordinates(int index, double value);
  inline void add_coordinates(double value);
  inline const ::google::protobuf::RepeatedField< double >&
      coordinates() const;
  inline ::google::protobuf::RepeatedField< double >*
      mutable_coordinates();

  // required .GEOPOI.enumGeometryType GeometryType = 4;
  inline bool has_geometrytype() const;
  inline void clear_geometrytype();
  static const int kGeometryTypeFieldNumber = 4;
  inline ::GEOPOI::enumGeometryType geometrytype() const;
  inline void set_geometrytype(::GEOPOI::enumGeometryType value);

  // optional int32 Interate = 5;
  inline bool has_interate() const;
  inline void clear_interate();
  static const int kInterateFieldNumber = 5;
  inline ::google::protobuf::int32 interate() const;
  inline void set_interate(::google::protobuf::int32 value);

  // optional int32 SymbolID = 10 [default = 0];
  inline bool has_symbolid() const;
  inline void clear_symbolid();
  static const int kSymbolIDFieldNumber = 10;
  inline ::google::protobuf::int32 symbolid() const;
  inline void set_symbolid(::google::protobuf::int32 value);

  // optional double DisplayHeight = 11 [default = 32];
  inline bool has_displayheight() const;
  inline void clear_displayheight();
  static const int kDisplayHeightFieldNumber = 11;
  inline double displayheight() const;
  inline void set_displayheight(double value);

  // optional uint32 ShiningColor = 12 [default = 0];
  inline bool has_shiningcolor() const;
  inline void clear_shiningcolor();
  static const int kShiningColorFieldNumber = 12;
  inline ::google::protobuf::uint32 shiningcolor() const;
  inline void set_shiningcolor(::google::protobuf::uint32 value);

  // optional uint32 FontNameIndex = 13 [default = 0];
  inline bool has_fontnameindex() const;
  inline void clear_fontnameindex();
  static const int kFontNameIndexFieldNumber = 13;
  inline ::google::protobuf::uint32 fontnameindex() const;
  inline void set_fontnameindex(::google::protobuf::uint32 value);

  // optional int32 FontSize = 14 [default = 18];
  inline bool has_fontsize() const;
  inline void clear_fontsize();
  static const int kFontSizeFieldNumber = 14;
  inline ::google::protobuf::int32 fontsize() const;
  inline void set_fontsize(::google::protobuf::int32 value);

  // optional uint32 FontColor = 15 [default = 0];
  inline bool has_fontcolor() const;
  inline void clear_fontcolor();
  static const int kFontColorFieldNumber = 15;
  inline ::google::protobuf::uint32 fontcolor() const;
  inline void set_fontcolor(::google::protobuf::uint32 value);

  // optional .GEOPOI.enumZCoordType ZCoordType = 16 [default = 3];
  inline bool has_ZCoordType() const;
  inline void clear_ZCoordType();
  static const int kZCoordTypeFieldNumber = 16;
  inline ::GEOPOI::enumZCoordType ZCoordType() const;
  inline void set_ZCoordType(::GEOPOI::enumZCoordType value);

  // @@protoc_insertion_point(class_scope:GEOPOI.PBPOI)
 private:
  inline void set_has_oid();
  inline void clear_has_oid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_geometrytype();
  inline void clear_has_geometrytype();
  inline void set_has_interate();
  inline void clear_has_interate();
  inline void set_has_symbolid();
  inline void clear_has_symbolid();
  inline void set_has_displayheight();
  inline void clear_has_displayheight();
  inline void set_has_shiningcolor();
  inline void clear_has_shiningcolor();
  inline void set_has_fontnameindex();
  inline void clear_has_fontnameindex();
  inline void set_has_fontsize();
  inline void clear_has_fontsize();
  inline void set_has_fontcolor();
  inline void clear_has_fontcolor();
  inline void set_has_ZCoordType();
  inline void clear_has_ZCoordType();

  ::google::protobuf::uint64 oid_;
  ::std::string* name_;
  ::google::protobuf::RepeatedField< double > coordinates_;
  mutable int _coordinates_cached_byte_size_;
  int geometrytype_;
  ::google::protobuf::int32 interate_;
  double displayheight_;
  ::google::protobuf::int32 symbolid_;
  ::google::protobuf::uint32 shiningcolor_;
  ::google::protobuf::uint32 fontnameindex_;
  ::google::protobuf::int32 fontsize_;
  ::google::protobuf::uint32 fontcolor_;
  int ZCoordType_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_GeoPOI_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_GeoPOI_2eproto();
  #endif
  friend void protobuf_AssignDesc_GeoPOI_2eproto();
  friend void protobuf_ShutdownFile_GeoPOI_2eproto();

  void InitAsDefaultInstance();
  static PBPOI* default_instance_;
};
// -------------------------------------------------------------------

class StringTable : public ::google::protobuf::MessageLite {
 public:
  StringTable();
  virtual ~StringTable();

  StringTable(const StringTable& from);

  inline StringTable& operator=(const StringTable& from) {
    CopyFrom(from);
    return *this;
  }

  static const StringTable& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const StringTable* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(StringTable* other);

  // implements Message ----------------------------------------------

  StringTable* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const StringTable& from);
  void MergeFrom(const StringTable& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string s = 1;
  inline int s_size() const;
  inline void clear_s();
  static const int kSFieldNumber = 1;
  inline const ::std::string& s(int index) const;
  inline ::std::string* mutable_s(int index);
  inline void set_s(int index, const ::std::string& value);
  inline void set_s(int index, const char* value);
  inline void set_s(int index, const char* value, size_t size);
  inline ::std::string* add_s();
  inline void add_s(const ::std::string& value);
  inline void add_s(const char* value);
  inline void add_s(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& s() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_s();

  // @@protoc_insertion_point(class_scope:GEOPOI.StringTable)
 private:

  ::google::protobuf::RepeatedPtrField< ::std::string> s_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_GeoPOI_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_GeoPOI_2eproto();
  #endif
  friend void protobuf_AssignDesc_GeoPOI_2eproto();
  friend void protobuf_ShutdownFile_GeoPOI_2eproto();

  void InitAsDefaultInstance();
  static StringTable* default_instance_;
};
// -------------------------------------------------------------------

class PBPOITile : public ::google::protobuf::MessageLite {
 public:
  PBPOITile();
  virtual ~PBPOITile();

  PBPOITile(const PBPOITile& from);

  inline PBPOITile& operator=(const PBPOITile& from) {
    CopyFrom(from);
    return *this;
  }

  static const PBPOITile& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PBPOITile* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PBPOITile* other);

  // implements Message ----------------------------------------------

  PBPOITile* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PBPOITile& from);
  void MergeFrom(const PBPOITile& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 Version = 1;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 1;
  inline ::google::protobuf::int64 version() const;
  inline void set_version(::google::protobuf::int64 value);

  // required int64 TileKey = 2;
  inline bool has_tilekey() const;
  inline void clear_tilekey();
  static const int kTileKeyFieldNumber = 2;
  inline ::google::protobuf::int64 tilekey() const;
  inline void set_tilekey(::google::protobuf::int64 value);

  // required .GEOPOI.StringTable StringTable = 3;
  inline bool has_stringtable() const;
  inline void clear_stringtable();
  static const int kStringTableFieldNumber = 3;
  inline const ::GEOPOI::StringTable& stringtable() const;
  inline ::GEOPOI::StringTable* mutable_stringtable();
  inline ::GEOPOI::StringTable* release_stringtable();
  inline void set_allocated_stringtable(::GEOPOI::StringTable* stringtable);

  // repeated .GEOPOI.PBPOI POIS = 4;
  inline int pois_size() const;
  inline void clear_pois();
  static const int kPOISFieldNumber = 4;
  inline const ::GEOPOI::PBPOI& pois(int index) const;
  inline ::GEOPOI::PBPOI* mutable_pois(int index);
  inline ::GEOPOI::PBPOI* add_pois();
  inline const ::google::protobuf::RepeatedPtrField< ::GEOPOI::PBPOI >&
      pois() const;
  inline ::google::protobuf::RepeatedPtrField< ::GEOPOI::PBPOI >*
      mutable_pois();

  // @@protoc_insertion_point(class_scope:GEOPOI.PBPOITile)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_tilekey();
  inline void clear_has_tilekey();
  inline void set_has_stringtable();
  inline void clear_has_stringtable();

  ::google::protobuf::int64 version_;
  ::google::protobuf::int64 tilekey_;
  ::GEOPOI::StringTable* stringtable_;
  ::google::protobuf::RepeatedPtrField< ::GEOPOI::PBPOI > pois_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_GeoPOI_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_GeoPOI_2eproto();
  #endif
  friend void protobuf_AssignDesc_GeoPOI_2eproto();
  friend void protobuf_ShutdownFile_GeoPOI_2eproto();

  void InitAsDefaultInstance();
  static PBPOITile* default_instance_;
};
// ===================================================================


// ===================================================================

// PBPOI

// required uint64 OID = 1;
inline bool PBPOI::has_oid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBPOI::set_has_oid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBPOI::clear_has_oid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBPOI::clear_oid() {
  oid_ = GOOGLE_ULONGLONG(0);
  clear_has_oid();
}
inline ::google::protobuf::uint64 PBPOI::oid() const {
  return oid_;
}
inline void PBPOI::set_oid(::google::protobuf::uint64 value) {
  set_has_oid();
  oid_ = value;
}

// required string Name = 2;
inline bool PBPOI::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBPOI::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBPOI::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBPOI::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& PBPOI::name() const {
  return *name_;
}
inline void PBPOI::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PBPOI::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PBPOI::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBPOI::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* PBPOI::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void PBPOI::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated double Coordinates = 3 [packed = true];
inline int PBPOI::coordinates_size() const {
  return coordinates_.size();
}
inline void PBPOI::clear_coordinates() {
  coordinates_.Clear();
}
inline double PBPOI::coordinates(int index) const {
  return coordinates_.Get(index);
}
inline void PBPOI::set_coordinates(int index, double value) {
  coordinates_.Set(index, value);
}
inline void PBPOI::add_coordinates(double value) {
  coordinates_.Add(value);
}
inline const ::google::protobuf::RepeatedField< double >&
PBPOI::coordinates() const {
  return coordinates_;
}
inline ::google::protobuf::RepeatedField< double >*
PBPOI::mutable_coordinates() {
  return &coordinates_;
}

// required .GEOPOI.enumGeometryType GeometryType = 4;
inline bool PBPOI::has_geometrytype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBPOI::set_has_geometrytype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBPOI::clear_has_geometrytype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBPOI::clear_geometrytype() {
  geometrytype_ = 0;
  clear_has_geometrytype();
}
inline ::GEOPOI::enumGeometryType PBPOI::geometrytype() const {
  return static_cast< ::GEOPOI::enumGeometryType >(geometrytype_);
}
inline void PBPOI::set_geometrytype(::GEOPOI::enumGeometryType value) {
  assert(::GEOPOI::enumGeometryType_IsValid(value));
  set_has_geometrytype();
  geometrytype_ = value;
}

// optional int32 Interate = 5;
inline bool PBPOI::has_interate() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBPOI::set_has_interate() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBPOI::clear_has_interate() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBPOI::clear_interate() {
  interate_ = 0;
  clear_has_interate();
}
inline ::google::protobuf::int32 PBPOI::interate() const {
  return interate_;
}
inline void PBPOI::set_interate(::google::protobuf::int32 value) {
  set_has_interate();
  interate_ = value;
}

// optional int32 SymbolID = 10 [default = 0];
inline bool PBPOI::has_symbolid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PBPOI::set_has_symbolid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PBPOI::clear_has_symbolid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PBPOI::clear_symbolid() {
  symbolid_ = 0;
  clear_has_symbolid();
}
inline ::google::protobuf::int32 PBPOI::symbolid() const {
  return symbolid_;
}
inline void PBPOI::set_symbolid(::google::protobuf::int32 value) {
  set_has_symbolid();
  symbolid_ = value;
}

// optional double DisplayHeight = 11 [default = 32];
inline bool PBPOI::has_displayheight() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PBPOI::set_has_displayheight() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PBPOI::clear_has_displayheight() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PBPOI::clear_displayheight() {
  displayheight_ = 32;
  clear_has_displayheight();
}
inline double PBPOI::displayheight() const {
  return displayheight_;
}
inline void PBPOI::set_displayheight(double value) {
  set_has_displayheight();
  displayheight_ = value;
}

// optional uint32 ShiningColor = 12 [default = 0];
inline bool PBPOI::has_shiningcolor() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PBPOI::set_has_shiningcolor() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PBPOI::clear_has_shiningcolor() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PBPOI::clear_shiningcolor() {
  shiningcolor_ = 0u;
  clear_has_shiningcolor();
}
inline ::google::protobuf::uint32 PBPOI::shiningcolor() const {
  return shiningcolor_;
}
inline void PBPOI::set_shiningcolor(::google::protobuf::uint32 value) {
  set_has_shiningcolor();
  shiningcolor_ = value;
}

// optional uint32 FontNameIndex = 13 [default = 0];
inline bool PBPOI::has_fontnameindex() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PBPOI::set_has_fontnameindex() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PBPOI::clear_has_fontnameindex() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PBPOI::clear_fontnameindex() {
  fontnameindex_ = 0u;
  clear_has_fontnameindex();
}
inline ::google::protobuf::uint32 PBPOI::fontnameindex() const {
  return fontnameindex_;
}
inline void PBPOI::set_fontnameindex(::google::protobuf::uint32 value) {
  set_has_fontnameindex();
  fontnameindex_ = value;
}

// optional int32 FontSize = 14 [default = 18];
inline bool PBPOI::has_fontsize() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PBPOI::set_has_fontsize() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PBPOI::clear_has_fontsize() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PBPOI::clear_fontsize() {
  fontsize_ = 18;
  clear_has_fontsize();
}
inline ::google::protobuf::int32 PBPOI::fontsize() const {
  return fontsize_;
}
inline void PBPOI::set_fontsize(::google::protobuf::int32 value) {
  set_has_fontsize();
  fontsize_ = value;
}

// optional uint32 FontColor = 15 [default = 0];
inline bool PBPOI::has_fontcolor() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void PBPOI::set_has_fontcolor() {
  _has_bits_[0] |= 0x00000400u;
}
inline void PBPOI::clear_has_fontcolor() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void PBPOI::clear_fontcolor() {
  fontcolor_ = 0u;
  clear_has_fontcolor();
}
inline ::google::protobuf::uint32 PBPOI::fontcolor() const {
  return fontcolor_;
}
inline void PBPOI::set_fontcolor(::google::protobuf::uint32 value) {
  set_has_fontcolor();
  fontcolor_ = value;
}

// optional .GEOPOI.enumZCoordType ZCoordType = 16 [default = 3];
inline bool PBPOI::has_ZCoordType() const {
	return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void PBPOI::set_has_ZCoordType() {
	_has_bits_[0] |= 0x00000800u;
}
inline void PBPOI::clear_has_ZCoordType() {
	_has_bits_[0] &= ~0x00000800u;
}
inline void PBPOI::clear_ZCoordType() {
	ZCoordType_ = 3;
	clear_has_ZCoordType();
}
inline ::GEOPOI::enumZCoordType PBPOI::ZCoordType() const {
	return static_cast< ::GEOPOI::enumZCoordType >(ZCoordType_);
}
inline void PBPOI::set_ZCoordType(::GEOPOI::enumZCoordType value) {
	assert(::GEOPOI::enumZCoordType_IsValid(value));
	set_has_ZCoordType();
	ZCoordType_ = value;
}

// -------------------------------------------------------------------

// StringTable

// repeated string s = 1;
inline int StringTable::s_size() const {
  return s_.size();
}
inline void StringTable::clear_s() {
  s_.Clear();
}
inline const ::std::string& StringTable::s(int index) const {
  return s_.Get(index);
}
inline ::std::string* StringTable::mutable_s(int index) {
  return s_.Mutable(index);
}
inline void StringTable::set_s(int index, const ::std::string& value) {
  s_.Mutable(index)->assign(value);
}
inline void StringTable::set_s(int index, const char* value) {
  s_.Mutable(index)->assign(value);
}
inline void StringTable::set_s(int index, const char* value, size_t size) {
  s_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* StringTable::add_s() {
  return s_.Add();
}
inline void StringTable::add_s(const ::std::string& value) {
  s_.Add()->assign(value);
}
inline void StringTable::add_s(const char* value) {
  s_.Add()->assign(value);
}
inline void StringTable::add_s(const char* value, size_t size) {
  s_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
StringTable::s() const {
  return s_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
StringTable::mutable_s() {
  return &s_;
}

// -------------------------------------------------------------------

// PBPOITile

// required int64 Version = 1;
inline bool PBPOITile::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBPOITile::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBPOITile::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBPOITile::clear_version() {
  version_ = GOOGLE_LONGLONG(0);
  clear_has_version();
}
inline ::google::protobuf::int64 PBPOITile::version() const {
  return version_;
}
inline void PBPOITile::set_version(::google::protobuf::int64 value) {
  set_has_version();
  version_ = value;
}

// required int64 TileKey = 2;
inline bool PBPOITile::has_tilekey() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBPOITile::set_has_tilekey() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBPOITile::clear_has_tilekey() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBPOITile::clear_tilekey() {
  tilekey_ = GOOGLE_LONGLONG(0);
  clear_has_tilekey();
}
inline ::google::protobuf::int64 PBPOITile::tilekey() const {
  return tilekey_;
}
inline void PBPOITile::set_tilekey(::google::protobuf::int64 value) {
  set_has_tilekey();
  tilekey_ = value;
}

// required .GEOPOI.StringTable StringTable = 3;
inline bool PBPOITile::has_stringtable() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBPOITile::set_has_stringtable() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBPOITile::clear_has_stringtable() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBPOITile::clear_stringtable() {
  if (stringtable_ != NULL) stringtable_->::GEOPOI::StringTable::Clear();
  clear_has_stringtable();
}
inline const ::GEOPOI::StringTable& PBPOITile::stringtable() const {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return stringtable_ != NULL ? *stringtable_ : *default_instance().stringtable_;
#else
  return stringtable_ != NULL ? *stringtable_ : *default_instance_->stringtable_;
#endif
}
inline ::GEOPOI::StringTable* PBPOITile::mutable_stringtable() {
  set_has_stringtable();
  if (stringtable_ == NULL) stringtable_ = new ::GEOPOI::StringTable;
  return stringtable_;
}
inline ::GEOPOI::StringTable* PBPOITile::release_stringtable() {
  clear_has_stringtable();
  ::GEOPOI::StringTable* temp = stringtable_;
  stringtable_ = NULL;
  return temp;
}
inline void PBPOITile::set_allocated_stringtable(::GEOPOI::StringTable* stringtable) {
  delete stringtable_;
  stringtable_ = stringtable;
  if (stringtable) {
    set_has_stringtable();
  } else {
    clear_has_stringtable();
  }
}

// repeated .GEOPOI.PBPOI POIS = 4;
inline int PBPOITile::pois_size() const {
  return pois_.size();
}
inline void PBPOITile::clear_pois() {
  pois_.Clear();
}
inline const ::GEOPOI::PBPOI& PBPOITile::pois(int index) const {
  return pois_.Get(index);
}
inline ::GEOPOI::PBPOI* PBPOITile::mutable_pois(int index) {
  return pois_.Mutable(index);
}
inline ::GEOPOI::PBPOI* PBPOITile::add_pois() {
  return pois_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GEOPOI::PBPOI >&
PBPOITile::pois() const {
  return pois_;
}
inline ::google::protobuf::RepeatedPtrField< ::GEOPOI::PBPOI >*
PBPOITile::mutable_pois() {
  return &pois_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace GEOPOI

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_GeoPOI_2eproto__INCLUDED
